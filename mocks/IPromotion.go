// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	order "foodcalculator/order"
	big "math/big"

	mock "github.com/stretchr/testify/mock"
)

// IPromotion is an autogenerated mock type for the IPromotion type
type IPromotion struct {
	mock.Mock
}

// GetDiscount provides a mock function with given fields: orders
func (_m *IPromotion) GetDiscount(orders *order.Orders) *big.Float {
	ret := _m.Called(orders)

	if len(ret) == 0 {
		panic("no return value specified for GetDiscount")
	}

	var r0 *big.Float
	if rf, ok := ret.Get(0).(func(*order.Orders) *big.Float); ok {
		r0 = rf(orders)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*big.Float)
		}
	}

	return r0
}

// ValidatePromotion provides a mock function with given fields: orders
func (_m *IPromotion) ValidatePromotion(orders *order.Orders) bool {
	ret := _m.Called(orders)

	if len(ret) == 0 {
		panic("no return value specified for ValidatePromotion")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(*order.Orders) bool); ok {
		r0 = rf(orders)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewIPromotion creates a new instance of IPromotion. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIPromotion(t interface {
	mock.TestingT
	Cleanup(func())
}) *IPromotion {
	mock := &IPromotion{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
